with open("input.txt", "r") as file:
    data = file.readlines()

PLACES = 450
key = ""
new_dict = {}
sum_given = 0
total_sum = 0


for line in data:
    start_id = line.rfind(" ")
    key = line[:start_id]
    new_dict[key] = int(line[start_id + 1:].rstrip("\n"))

for key, value in new_dict.items():
    total_sum += value

first_fraction = total_sum / PLACES

new_list = [[value, value // first_fraction, value - (value // first_fraction) * first_fraction]
            for key, value in new_dict.items()]


values_list = sorted(new_list, key=lambda x: x[2], reverse=True)


for value in new_list:
    sum_given += value[1]

left_voices = PLACES - sum_given

while left_voices > 0:
    if len(values_list) == 1:
        values_list[0][1] += 1
        left_voices -= 1
    for i in range(len(values_list) - 1):
        if left_voices != 0:
            if values_list[i][2] != values_list[i+1][2]:
                values_list[i][1] += 1
            else:
                if values_list[i][0] > values_list[i+1][0]:
                    values_list[i][1] += 1
                else:
                    values_list[i+1][1] += 1
            left_voices -= 1



for key, value in new_dict.items():
    for final_value in values_list:
        if value == final_value[0]:
            print(key.rstrip(), int(final_value[1]))
            break
